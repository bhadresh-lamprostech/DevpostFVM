export function getAbortSignal(signal, maxTimeout = 60000) {
    let abortSignal;
    if (signal == null) {
        const controller = new AbortController();
        abortSignal = controller.signal;
        setTimeout(controller.abort.bind(controller), maxTimeout);
    }
    else {
        abortSignal = signal;
    }
    return abortSignal;
}
export async function getAsyncPoller(fn, interval = 1500, signal) {
    const abortSignal = getAbortSignal(signal, 10000);
    const checkCondition = (resolve, reject) => {
        Promise.resolve(fn())
            .then((result) => {
            if (result.done && result.data != null) {
                return resolve(result.data);
            }
            if (abortSignal.aborted) {
                return reject(abortSignal.reason);
            }
            else {
                setTimeout(checkCondition, interval, resolve, reject);
            }
        })
            .catch((err) => {
            return reject(err);
        });
    };
    return await new Promise(checkCondition);
}
//# sourceMappingURL=await.js.map